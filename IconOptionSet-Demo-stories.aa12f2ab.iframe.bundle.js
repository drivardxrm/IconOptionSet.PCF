"use strict";(self.webpackChunkpcf_project=self.webpackChunkpcf_project||[]).push([[626],{"./stories/IconOptionSet.Demo.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DisabledEmpty:()=>DisabledEmpty,DisabledSelected:()=>DisabledSelected,Masked:()=>Masked,__namedExportsOrder:()=>__namedExportsOrder,default:()=>IconOptionSet_Demo_stories});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@fluentui/font-icons-mdl2/lib/index.js"),Stack=__webpack_require__("./node_modules/@fluentui/react/lib/components/Stack/Stack.js"),IconButton=__webpack_require__("./node_modules/@fluentui/react/lib/components/Button/IconButton/IconButton.js"),ChoiceGroup=__webpack_require__("./node_modules/@fluentui/react/lib/components/ChoiceGroup/ChoiceGroup.js");const ChoiceGroupOptionStyles=props=>{const{checked,disabled,theme}=props,{semanticColors}=theme;return{innerField:[disabled&&{opacity:.5}],field:[{selectors:{":before":[disabled&&{backgroundColor:semanticColors.bodySubtext}],".ms-ChoiceFieldLabel":{color:disabled?semanticColors.bodySubtext:semanticColors.bodyText}}},checked&&disabled&&{borderColor:semanticColors.bodyText}]}};var style_utilities_lib=__webpack_require__("./node_modules/@fluentui/style-utilities/lib/index.js"),FontIcon=__webpack_require__("./node_modules/@fluentui/react/lib/components/Icon/FontIcon.js"),TextField=__webpack_require__("./node_modules/@fluentui/react/lib/components/TextField/TextField.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const MaskedInput=()=>{const maskedclass=(0,style_utilities_lib.y0)({fontSize:30,height:30,width:50,margin:"1px"});return(0,jsx_runtime.jsxs)(Stack.K,{tokens:{childrenGap:2},horizontal:!0,children:[(0,jsx_runtime.jsx)(FontIcon.xu,{iconName:"Lock",className:maskedclass}),(0,jsx_runtime.jsx)(TextField.n,{value:"*********",style:{width:"100%"}})]})};MaskedInput.displayName="MaskedInput";const IconOptionset_MaskedInput=MaskedInput;(0,lib.l)();const IconOptionsetControl=props=>{const[selectedValue,setSelectedValue]=(0,react.useState)(null==props.selected?null:props.selected.toString()),[options,setOptions]=(0,react.useState)((()=>props.icons.map((iconsetup=>getChoiceGroupOption(iconsetup))))),firstUpdate=(0,react.useRef)(!0);(0,react.useEffect)((()=>{if(firstUpdate.current)return void(firstUpdate.current=!1);let updatedValue=null==selectedValue?void 0:Number(selectedValue);props.onChange(updatedValue),setOptions(props.icons.map((iconsetup=>getChoiceGroupOption(iconsetup))))}),[selectedValue]),(0,react.useEffect)((()=>{setSelectedValue(null==props.selected?null:props.selected.toString())}),[props.selected]);const onChange=(ev,option)=>{null!=option&&setSelectedValue(option.key)},onCancel=()=>{setSelectedValue(null)};function getChoiceGroupOption(iconsetup){let key=iconsetup.key.toString();return{styles:ChoiceGroupOptionStyles,key,text:iconsetup.text,disabled:props.readonly,iconProps:{iconName:iconsetup.icon,style:{color:key==selectedValue?props.selectedcolor:void 0}}}}const cancelIconProps={iconName:"Cancel"};return props.icons.length>5?(0,jsx_runtime.jsx)("div",{children:"ERROR : this control is designed for 5 icons or less"}):props.masked?(0,jsx_runtime.jsx)(IconOptionset_MaskedInput,{}):(0,jsx_runtime.jsxs)(Stack.K,{horizontal:!0,children:[!props.readonly&&(0,jsx_runtime.jsx)(IconButton.h,{iconProps:cancelIconProps,title:"Cancel",ariaLabel:"Cancel",onClick:onCancel}),(0,jsx_runtime.jsx)(ChoiceGroup.F,{selectedKey:selectedValue,options,onChange})]})},IconOptionset_IconOptionsetControl=IconOptionsetControl;try{IconOptionsetControl.displayName="IconOptionsetControl",IconOptionsetControl.__docgenInfo={description:"",displayName:"IconOptionsetControl",props:{selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"number | undefined"}},icons:{defaultValue:null,description:"",name:"icons",required:!0,type:{name:"IIconSetup[]"}},readonly:{defaultValue:null,description:"",name:"readonly",required:!0,type:{name:"boolean"}},masked:{defaultValue:null,description:"",name:"masked",required:!0,type:{name:"boolean"}},selectedcolor:{defaultValue:null,description:"",name:"selectedcolor",required:!0,type:{name:"string | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(selected: number | undefined) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["IconOptionset/IconOptionsetControl.tsx#IconOptionsetControl"]={docgenInfo:IconOptionsetControl.__docgenInfo,name:"IconOptionsetControl",path:"IconOptionset/IconOptionsetControl.tsx#IconOptionsetControl"})}catch(__react_docgen_typescript_loader_error){}const IconOptionSet_Demo_stories={component:IconOptionset_IconOptionsetControl,decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{margin:"3em",maxWidth:"350px"},children:Story()})],args:{selected:void 0,icons:[{key:1,icon:"EmojiDisappointed",text:"Very Negative"},{key:2,icon:"Sad",text:"Negative"},{key:3,icon:"EmojiNeutral",text:"Neutral"},{key:4,icon:"Emoji2",text:"Positive"},{key:5,icon:"Emoji",text:"Very Positive"}],readonly:!1,masked:!1,selectedcolor:"#005A9E"}},Default={},DisabledEmpty={args:{...Default.args,readonly:!0}},DisabledSelected={args:{...Default.args,selected:3,readonly:!0}},Masked={args:{...Default.args,selected:3,masked:!0}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},DisabledEmpty.parameters={...DisabledEmpty.parameters,docs:{...DisabledEmpty.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    readonly: true\n  }\n}",...DisabledEmpty.parameters?.docs?.source}}},DisabledSelected.parameters={...DisabledSelected.parameters,docs:{...DisabledSelected.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    selected: 3,\n    readonly: true\n  }\n}",...DisabledSelected.parameters?.docs?.source}}},Masked.parameters={...Masked.parameters,docs:{...Masked.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    selected: 3,\n    masked: true\n  }\n}",...Masked.parameters?.docs?.source}}};const __namedExportsOrder=["Default","DisabledEmpty","DisabledSelected","Masked"]}}]);